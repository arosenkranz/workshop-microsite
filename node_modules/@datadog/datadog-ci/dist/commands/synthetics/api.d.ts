import { AxiosError } from 'axios';
import { APIConfiguration, Payload, PollResult, Test, TestSearchResult, Trigger } from './interfaces';
interface BackendError {
    errors: string[];
}
export declare class EndpointError extends Error {
    message: string;
    status: number;
    constructor(message: string, status: number);
}
export declare const formatBackendErrors: (requestError: AxiosError<BackendError>) => string;
export declare const is5xxError: (error: AxiosError | EndpointError) => boolean | 0 | undefined;
export declare const apiConstructor: (configuration: APIConfiguration) => {
    getPresignedURL: (testIds: string[]) => Promise<{
        url: string;
    }>;
    getTest: (testId: string) => Promise<Test>;
    pollResults: (resultIds: string[]) => Promise<{
        results: PollResult[];
    }>;
    searchTests: (query: string) => Promise<TestSearchResult>;
    triggerTests: (data: Payload) => Promise<Trigger>;
};
export {};
