import { CloudWatchLogs } from 'aws-sdk';
export interface LogGroupConfiguration {
    createLogGroupRequest?: CloudWatchLogs.CreateLogGroupRequest;
    deleteSubscriptionFilterRequest?: CloudWatchLogs.DeleteSubscriptionFilterRequest;
    logGroupName: string;
    subscriptionFilterRequest: CloudWatchLogs.PutSubscriptionFilterRequest;
}
export declare enum SubscriptionState {
    Empty = 0,
    CorrectDestination = 1,
    WrongDestinationOwned = 2,
    WrongDestinationUnowned = 3
}
export declare const applyLogGroupConfig: (logs: CloudWatchLogs, configuration: LogGroupConfiguration) => Promise<void>;
export declare const calculateLogGroupUpdateRequest: (logs: CloudWatchLogs, logGroupName: string, forwarderARN: string) => Promise<LogGroupConfiguration | undefined>;
export declare const hasLogGroup: (logs: CloudWatchLogs, logGroupName: string) => Promise<boolean>;
export declare const getSubscriptionFilterState: (logs: CloudWatchLogs, logGroupName: string, forwarderARN: string) => Promise<SubscriptionState>;
